#!/usr/bin/env bash
# soundness.sh – install Soundness, create a key, optionally export the pubkey

set -euo pipefail

# ---------- helper -----------------------------------------------------------
die() { echo -e "❌  $*" >&2; exit 1; }

log() { printf '\n\033[1;34m==> %s …\033[0m\n' "$*"; }

ensure_path() {
  local line=$1
  local profile=$2
  grep -Fq "$line" "$profile" || echo "$line" >> "$profile"
}
# -----------------------------------------------------------------------------


# ---------- banner -----------------------------------------------------------
clear
echo -e "\033[1;35m============================================\033[0m"
echo -e "\033[1;32m   SOUNDNESS PK DEPLOYMENT SCRIPT BY BIGRAY0X\033[0m"
echo -e "\033[1;35m============================================\033[0m"
echo
# -----------------------------------------------------------------------------


log "Updating system and installing build tools"
apt update && apt upgrade -y
apt install -y build-essential protobuf-compiler curl wget pkg-config \
               libcrypto++-dev libc6-dev openssl libssl-dev

# 1. Soundness bootstrap ------------------------------------------------------
log "Installing soundnessup"
curl -sSL https://raw.githubusercontent.com/soundnesslabs/soundness-layer/main/soundnessup/install | bash

# 2. Rust toolchain -----------------------------------------------------------
log "Installing Rust toolchain"
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs/ | sh -s -- -y

# 3. Load Rust env now (needed for cargo-built CLI tools)
[[ -f "$HOME/.cargo/env" ]] && source "$HOME/.cargo/env"

# 4. STITCH the PATH for THIS script run --------------------------------------
export PATH="$HOME/.soundnessup/bin:$HOME/.cargo/bin:$PATH"

# 5. Safely source .bashrc so PATH lines added by the installer take effect ---
log "Reloading profile to pick up installer PATH lines (shielding PS1)"
(
  set +u                 # allow unset vars temporarily
  export PS1=""          # avoid PS1 unbound error
  source "$HOME/.bashrc" || true
)

# 6. Locate soundnessup binary -------------------------------------------------
if ! command -v soundnessup &>/dev/null; then
  # fall-back scan (covers odd install locations)
  SOUND_BIN=$(find "$HOME" -type f -name soundnessup -perm -u=x 2>/dev/null | head -n1 || true)
  [[ -n "$SOUND_BIN" ]] || die "soundnessup not found after install"
  export PATH="$(dirname "$SOUND_BIN"):$PATH"
fi

# 7. First-time initialisation -------------------------------------------------
log "Running soundnessup (first-time initialisation)"
soundnessup --help >/dev/null || die "soundnessup failed to start"

# 8. Install / update Soundness CLI -------------------------------------------
log "Installing & updating Soundness CLI"
soundnessup install
soundnessup update

# 9. Key generation -----------------------------------------------------------
echo
log "Generating key named 'my-key' (enter a passphrase twice)"
soundness-cli generate-key --name my-key

# 10. Optional public-key export ----------------------------------------------
echo
read -r -p "Export the public key now? [y/N]: " reply
if [[ "$reply" =~ ^[Yy]([Ee][Ss])?$ ]]; then
  soundness-cli export-key --name my-key
  echo "✅  Public key exported (file: ./my-key.pub)"
else
  echo "ℹ️  Skipped export. You can run 'soundness-cli export-key --name my-key' later."
fi

# 11. Persist PATH changes so future shells see the tools ----------------------
PROFILE="$HOME/.bashrc"
ensure_path 'export PATH="$HOME/.soundnessup/bin:$PATH"' "$PROFILE"
ensure_path 'export PATH="$HOME/.cargo/bin:$PATH"' "$PROFILE"
ensure_path 'source "$HOME/.cargo/env"' "$PROFILE"

# 12. Finish -------------------------------------------------------------------
echo -e "\n✅  Soundness installation finished!"
echo "Open a **new** terminal or run:"
echo '  source "$HOME/.cargo/env"'
echo "before using Soundness commands."