#!/usr/bin/env bash
# soundness.sh — installs Soundness, generates key, and exports public key

set -euo pipefail

echo "==> Updating system and installing dependencies ..."
apt update && apt upgrade -y
apt install -y build-essential protobuf-compiler curl wget pkg-config \
    libcrypto++-dev libc6-dev openssl libssl-dev

echo "==> Installing soundnessup ..."
curl -sSL https://raw.githubusercontent.com/soundnesslabs/soundness-layer/main/soundnessup/install | bash

echo "==> Installing Rust ..."
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs/ | sh -s -- -y

# Source Rust and Soundness environments directly
echo "==> Setting up environment ..."
if [ -f "$HOME/.cargo/env" ]; then
    source "$HOME/.cargo/env"
fi

export PATH="$HOME/.soundnessup/bin:$HOME/.cargo/bin:$PATH"

# Add to shell profile if not already there
PROFILE="$HOME/.bashrc"
grep -q 'soundnessup/bin' "$PROFILE" || echo 'export PATH="$HOME/.soundnessup/bin:$PATH"' >> "$PROFILE"
grep -q '.cargo/bin' "$PROFILE" || echo 'export PATH="$HOME/.cargo/bin:$PATH"' >> "$PROFILE"

echo "==> Installing and updating Soundness CLI ..."
soundnessup install
soundnessup update

# Generate key (user will be prompted for password)
echo
echo "==> Generating key (enter passphrase when prompted) ..."
soundness-cli generate-key --name my-key
echo

# Prompt to export key
read -r -p "Export the public key now? [y/N]: " export_reply
if [[ "$export_reply" =~ ^[Yy]([Ee][Ss])?$ ]]; then
    soundness-cli export-key --name my-key
    echo "✅ Public key exported."
else
    echo "ℹ️ Skipped export. You can run: soundness-cli export-key --name my-key"
fi

echo
echo "✅ Soundness is fully installed!"
echo "Next time, run:"
echo '  source "$HOME/.cargo/env"'
echo "  soundness-cli status"