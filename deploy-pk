#!/usr/bin/env bash
# soundness – installs system deps, Soundness, and generates/exports a key
# Usage: chmod +x soundness && ./soundness

set -euo pipefail

# 1. Confirm
read -r -p "This will update your system and install Soundness. Continue? [y/N] " reply
[[ "$reply" =~ ^[Yy]([Ee][Ss])?$ ]] || { echo "Aborted."; exit 1; }

echo "==> Updating system and installing dependencies ..."
sudo apt update && sudo apt upgrade -y
sudo apt install -y build-essential protobuf-compiler curl wget pkg-config \
    libcrypto++-dev libc6-dev openssl libssl-dev

# 2. Install Soundness
echo "==> Installing soundnessup …"
curl -sSL https://raw.githubusercontent.com/soundnesslabs/soundness-layer/main/soundnessup/install | bash

# 3. Source bashrc to pick up soundnessup path immediately
echo "==> Reloading shell environment to recognize soundnessup …"
source "$HOME/.bashrc"

# 4. Install Rust
echo "==> Installing Rust …"
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs/ | sh -s -- -y
source "$HOME/.cargo/env"

# 5. Add soundnessup to PATH permanently if not already
export PATH="$HOME/.soundnessup/bin:$PATH"
grep -q 'soundnessup/bin' "$HOME/.bashrc" || \
  echo 'export PATH="$HOME/.soundnessup/bin:$PATH"' >> "$HOME/.bashrc"

# 6. Run soundnessup install
echo "==> Installing and updating Soundness CLI …"
soundnessup install
soundnessup update

# 7. Generate key (user inputs passphrase here)
echo
echo "==> Generating key named 'my-key' (enter passphrase when prompted) …"
soundness-cli generate-key --name my-key
echo

# 8. Ask to export
read -r -p "Export the public key now? [y/N] " export_reply
if [[ "$export_reply" =~ ^[Yy]([Ee][Ss])?$ ]]; then
    soundness-cli export-key --name my-key
    echo "Public key exported."
else
    echo "Skipped export. Run 'soundness-cli export-key --name my-key' anytime."
fi

echo "✅ Done!"