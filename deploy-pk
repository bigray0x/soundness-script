#!/usr/bin/env bash
# soundness.sh — installs Soundness, generates key, and optionally exports it

set -euo pipefail

echo "==> Updating system and installing dependencies ..."
apt update && apt upgrade -y
apt install -y build-essential protobuf-compiler curl wget pkg-config \
    libcrypto++-dev libc6-dev openssl libssl-dev

echo "==> Installing soundnessup ..."
curl -sSL https://raw.githubusercontent.com/soundnesslabs/soundness-layer/main/soundnessup/install | bash

echo "==> Installing Rust ..."
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs/ | sh -s -- -y

# Source Rust env
if [ -f "$HOME/.cargo/env" ]; then
    source "$HOME/.cargo/env"
fi

# Add tools to PATH directly
export PATH="$HOME/.soundnessup/bin:$HOME/.cargo/bin:$PATH"

# Double-check soundnessup binary exists
if ! command -v soundnessup &>/dev/null; then
    echo "❌ soundnessup not found — check if it was installed in: $HOME/.soundnessup/bin"
    exit 1
fi

echo "==> Installing and updating Soundness CLI ..."
soundnessup install
soundnessup update

# Generate key (prompts for password)
echo
echo "==> Generating key named 'my-key' (enter passphrase when prompted) ..."
soundness-cli generate-key --name my-key
echo

# Ask to export key
read -r -p "Export the public key now? [y/N]: " export_reply
if [[ "$export_reply" =~ ^[Yy]([Ee][Ss])?$ ]]; then
    soundness-cli export-key --name my-key
    echo "✅ Public key exported."
else
    echo "ℹ️ Skipped export. You can run: soundness-cli export-key --name my-key"
fi

echo
echo "✅ Soundness setup complete!"
echo "Make sure to add this to your shell config for future use:"
echo 'export PATH="$HOME/.soundnessup/bin:$HOME/.cargo/bin:$PATH"'